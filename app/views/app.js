// Generated by CoffeeScript 1.8.0
(function() {
  var Buttons, Router, r,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.minute = 60000;

  this.bmp = 40;

  this.audio = document.querySelector("audio");

  Buttons = (function(_super) {
    __extends(Buttons, _super);

    function Buttons() {
      this.playLogic = __bind(this.playLogic, this);
      this.stop = __bind(this.stop, this);
      this.play = __bind(this.play, this);
      return Buttons.__super__.constructor.apply(this, arguments);
    }

    Buttons.prototype.el = ".buttons";

    Buttons.prototype.template = _.template($("#mainView").html());

    Buttons.prototype.events = {
      "click .add": "play",
      "click .stop": "stop"
    };

    Buttons.prototype.play = function(e) {
      if (e.target) {
        this.playLogic();
        return e.target.setAttribute("disabled", "disabled");
      }
    };

    Buttons.prototype.stop = function() {
      var id;
      audio.pause();
      audio.currentTime = 0;
      id = window.setTimeout((function() {}), 0);
      while (id--) {
        window.clearTimeout(id);
      }
      return this.$el.find(".add").removeAttr("disabled");
    };

    Buttons.prototype.playLogic = function() {
      setTimeout(((function(_this) {
        return function() {
          return _this.playLogic();
        };
      })(this)), minute / this.$el.find(".txt1").val());
      audio.load();
      return audio.play();
    };

    Buttons.prototype.render = function() {
      return this.$el.html(this.template());
    };

    return Buttons;

  })(Backbone.View);

  Router = (function(_super) {
    __extends(Router, _super);

    function Router() {
      return Router.__super__.constructor.apply(this, arguments);
    }

    Router.prototype.routes = {
      "": "default",
      "hidden": "tig"
    };

    Router.prototype["default"] = function() {
      var v;
      v = new Buttons();
      return v.render();
    };

    Router.prototype.tig = function() {
      return console.log("hi there");
    };

    return Router;

  })(Backbone.Router);

  r = new Router();

  Backbone.history.start();

}).call(this);
